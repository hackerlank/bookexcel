{%echo '<?php'%} 
/**
 * Generated by bookexcel
 * Do't modify this file directly, modify child class file instead
 */

{% if ($package != ''): %}
namespace {%:$this->convertPackage($package)%};
{% endif; %}

{%$filename = $className.$parentSuffix;%}
class {%:$className.$parentSuffix%} extends \{%$parentClassName%} 
{
    {% foreach ($fields as $field): %}
    protected const _{%:Util::camelToConst($field['name'])%} = "{%$field['name']%}";
    {% endforeach; %}

    {% foreach ($fields as $field): %}
   
    protected ${%$field['name']%};
    /**
     * {%$field['desc']%} 
     */
    public function get{%:ucfirst($field['name'])%}()
    {
        return $this->{%$field['name']%};
    }
    {% endforeach; %}

    /**
     * parse form {%$fileFormat%} 
     */
    public function parseFrom(IConfigParser $parser)
    {
        try{
            {% 
                $pkey = 0;
                foreach ($fields as $field): 
                $name = $field['name'];
                $uname = Util::camelToConst($name);
                list($type, $arrDeep) = $this->convertType2($field['type']);
                $get = 'getValue';
                if ($arrDeep == 1) {
                    $get = 'getList';
                } elseif($arrDeep > 1) {
                    $get = 'getListGroup';
                }
                $isPkey = $field['isPrimaryKey'];
                $pkey += $isPkey ? 1 : 0;
            %}
            $this->{%$name%} = $parser.{%$get%}(self::_{%$uname%}, '{%$type%}');
            {% if ($isPkey && $pkey == 1): %}
            $this->_key1 = $this->{%$name%};
            {% elseif ($isPkey && $pkey == 2): %}
            $this->_key2 = $this->{%$name%};
            {% endif; %}
            {% endforeach; %}

            return true;
        } catch(Exception $e)
        {
            return false;
        }
    }
}